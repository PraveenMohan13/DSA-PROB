Given an unsorted integer array nums, return the smallest missing positive integer.

You must implement an algorithm that runs in O(n) time and uses constant extra space.

Input Format

First line of each test case or query contains an integer 'N' representing the size of the first array/list.
Second line contains 'N' single space separated integers representing the elements in the array/list.
Constraints

No

Output Format

First positive missing number
Sample Input 0

3
1 2 0
Sample Output 0

3
Sample Input 1

4
-1 2 3 4
Sample Output 1

1
Explanation 1

2 is in the array but 1 is missing.
=============================================================================
import java.io.*;
import java.util.*;

public class Solution {
 
    public static void main(String[] args) {
        Scanner z=new Scanner(System.in);
        int n=z.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
            a[i]=z.nextInt();
        int j;
        for(int i=1;i<=n;i++)
        {
            for(j=0;j<n;j++)
            {
                if(a[j]==i)
                    break;
            }
            if(j==n)
            {
                System.out.print(i);
                return;
            }     
        }
        System.out.print(n+1);   
    }
}
