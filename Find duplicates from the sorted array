Given an sorted array of size N containing elements from 1 to N having only one element appearing twice. Find the duplicate element.

Input Format

First line consists of n value
Second line Consists 'n' space seperated integers representing the values present in the Array
Constraints

no

Output Format

Print the duplicate element.

Sample Input 0

8
1 2 3 4 5 6 7 7
Sample Output 0

7
Sample Input 1

6
1 1 2 3 4 5
Sample Output 1

1
==================================================================================================================================
import java.io.*;
import java.util.*;

public class Solution {
    
   static int fun(int a[],int n)
    {
        for(int i=0;i<n;i++)
        {
            if(a[i]==a[i+1])
                return a[i];
        }
       return 0;
    }

    public static void main(String[] args) {
       Scanner z=new Scanner(System.in);
        int n=z.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
            a[i]=z.nextInt();
        System.out.print(fun(a,n));
    }
}
-=====================================================================================================================-
class Test 
{ 
	static int fun(int a[], int low, int high) 
	{ 
		if(low>high)
            return -1;
        int mid=(low+high)/2;
        if(a[mid]!=mid+1)
        {
            if(mid>0&&a[mid]==a[mid-1])
                return mid;
            return fun(a,low,mid-1);
        }
        return fun(a,mid+1,high);
	} 
	

	public static void main(String[] args) 
	{ 
		Scanner z=new Scanner(System.in);
        int n=z.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
            a[i]=z.nextInt();
        int index=(fun(a,0,n-1));
		if (index != -1) 
			System.out.println(a[index]); 
	} 
} 

